common_deps(
    "//system:folly",
    "//system:glog",
    "//system:proxygenlib",
    "//system:wangle",
)

create_lib("Util", header_only=True)
create_lib("Config")

create_lib("PostParser", [
        name("HTTPRequest"),
    ],
);

create_lib("HTTPRequest",
    additional_headers=[
        "StringUtils.h",
    ],
)
create_lib("HTTPResponse", 
    additional_headers=[
        "EnumHash.h",
        "StringUtils.h",
    ],
)

create_lib("StreamingHTTPHandler",
    [
        name("HTTPRequest"),
        name("HTTPResponse"),
    ],
    additional_headers=[
        "StreamingHTTPHandler-inl.h",
    ],
)

create_lib("StreamingFileHandler",
    [
        name("StreamingHTTPHandler"),
    ],
)

create_lib("RouteMatch",
    [
        name("HTTPRequest"),
        name("HTTPResponse"),
        name("StreamingHTTPHandler"),
    ],
    header_only=True,
)

create_lib("BaseRoute",
    [
        name("HTTPResponse"),
        name("HTTPRequest"),
        name("RouteMatch"),
    ],
    header_only=True,
)

create_lib("StaticRoute",
    [
        name("BaseRoute"),
        name("HTTPResponse"),
        name("HTTPRequest"),
    ],
    header_only=True,
    additional_headers=[
        "StaticRoute-inl.h",
    ],
)
create_lib("Route", 
    [
        name("BaseRoute"),
        name("HTTPResponse"),
        name("HTTPRequest"),
        name("Util"),
    ],
    additional_headers=[
        "Route-inl.h",
        "EnumHash.h",
    ],
)
create_lib("Router", 
    [
        name("Route"),
        name("StaticRoute"),
        name("Util"),
    ],
)

create_lib("HTTPHandler", [
    name("Config"),
    name("Router"),
])

create_lib("HTTPHandlerFactory", [
    name("Config"),
    name("Router"),
    name("HTTPHandler"),
    name("StreamingHTTPHandler"),
])

create_lib("Server", [
    name("Config"),
    name("Router"),
    name("HTTPHandler"),
    name("HTTPHandlerFactory"),
    name("PostParser"),
    name("StreamingFileHandler"),
    "//system:proxygenhttpserver",
])

cxx_library(
    name="sakura-lib", 
    srcs=[],
    headers=[],
    exported_deps=[
        name("Server"),
    ]
)

cxx_binary(
    name="simple-server",
    srcs=[
        "main.cpp",
    ],
    deps=[
        ":sakura-lib",
    ],
)
